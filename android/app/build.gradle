apply plugin: "com.android.application"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

import com.android.build.OutputFile

apply from: "../../node_modules/react-native/react.gradle"

def enableSeparateBuildPerCPUArchitecture = false

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.forestwatcher"
        minSdkVersion 17
        targetSdkVersion 22
        versionCode 3
        versionName "1.2"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        resValue "string", "build_config_package", "com.forestwatcher"
    }
    signingConfigs {
        debug {
            storeFile file(project.env.get("RELEASE_STORE_FILE"))
            storePassword project.env.get("RELEASE_STORE_PASSWORD")
            keyAlias project.env.get("RELEASE_KEY_ALIAS")
            keyPassword project.env.get("RELEASE_KEY_PASSWORD")
        }
        release {
            storeFile file(project.env.get("RELEASE_STORE_FILE"))
            storePassword project.env.get("RELEASE_STORE_PASSWORD")
            keyAlias project.env.get("RELEASE_KEY_ALIAS")
            keyPassword project.env.get("RELEASE_KEY_PASSWORD")
        }
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}

dependencies {
    compile(project(':react-native-google-signin')){
      exclude group: "com.google.android.gms"
    }
    compile project(':react-native-google-analytics-bridge')
    compile project(':react-native-sensor-manager')
    compile project(':react-native-camera')
    compile project(':react-native-fetch-blob')
    compile project(':react-native-i18n')
    compile project(':react-native-config')
    compile project(':RNLocation')
    compile fileTree(dir: "libs", include: ["*.jar"])
    compile "com.android.support:appcompat-v7:23.0.1"
    compile "com.facebook.react:react-native:+"  // From node_modules
    compile(project(':react-native-maps')){
      exclude group: 'com.google.android.gms', module: 'play-services-base'
      exclude group: 'com.google.android.gms', module: 'play-services-maps'
    }
    compile 'com.google.android.gms:play-services-base:10.2.1'
    compile 'com.google.android.gms:play-services-maps:10.2.1'
    compile 'com.google.android.gms:play-services-auth:10.2.1'
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}

apply plugin: 'com.google.gms.google-services'
