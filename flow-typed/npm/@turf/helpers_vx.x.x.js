// @flow

// flow-typed signature: badb41e6666f804a3337137466fc89bc
// flow-typed version: <<STUB>>/@turf/helpers_v6.1.4/flow_v0.105.2

/**
 * This is an autogenerated libdef stub for:
 *
 *   '@turf/helpers'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module '@turf/helpers' {
  declare type GeometryTypes =
    | 'Point'
    | 'LineString'
    | 'Polygon'
    | 'MultiPoint'
    | 'MultiLineString'
    | 'MultiPolygon'
    | 'GeometryCollection';

  declare type CollectionTypes = 'FeatureCollection' | 'GeometryCollection';
  declare type Types = 'Feature' | GeometryTypes | CollectionTypes;

  declare type BBox2d = [number, number, number, number];
  declare type BBox3d = [number, number, number, number, number, number];
  declare type BBox = BBox2d | BBox3d;
  declare type Id = string | number;
  declare type Position = [number, number] | [number, number, number];
  declare type Properties = { [name: string]: any } | null;
  declare type Geometries = Point | LineString | Polygon | MultiPoint | MultiLineString | MultiPolygon;

  declare interface GeoJSONObject {
    +type: string;
    +bbox?: ?BBox;
  }

  declare interface GeometryObject extends GeoJSONObject {
    +type: GeometryTypes;
  }

  declare interface Geometry extends GeoJSONObject {
    +coordinates: Position | Array<Position> | Array<Array<Position>> | Array<Array<Array<Position>>>;
  }

  declare interface Point extends Geometry {
    +type: 'Point';
    +coordinates: Position;
  }

  declare interface MultiPoint extends Geometry {
    +type: 'MultiPoint';
    +coordinates: Array<Position>;
  }

  declare interface LineString extends Geometry {
    +type: 'LineString';
    +coordinates: Array<Position>;
  }

  declare interface MultiLineString extends Geometry {
    +type: 'MultiLineString';
    +coordinates: Array<Array<Position>>;
  }

  declare interface Polygon extends Geometry {
    +type: 'Polygon';
    +coordinates: Array<Array<Position>>;
  }

  declare interface MultiPolygon extends Geometry {
    +type: 'MultiPolygon';
    +coordinates: Array<Array<Array<Position>>>;
  }

  declare interface GeometryCollection extends GeometryObject {
    +type: 'GeometryCollection';
    +geometries: Array<Geometries>;
  }

  declare interface Feature<G = GeometryObject, P = Properties> extends GeoJSONObject {
    +type: 'Feature';
    +geometry: G;
    +id?: Id;
    +properties: P;
  }

  declare interface FeatureCollection<G = GeometryObject, P = Properties> extends GeoJSONObject {
    +type: 'FeatureCollection';
    +features: Array<Feature<G, P>>;
  }

  declare module.exports: {
    feature: <G: GeometryObject>(G) => Feature<G>,
    featureCollection: <T>(Array<Feature<T>>) => FeatureCollection<T>,
    lineString: (coordinates: Array<[number, number]>, properties?: Properties) => Feature<LineString>,
    point: (coordinates: [number, number], properties?: Properties) => Feature<Point>,
    polygon: (coordinates: Array<Array<[number, number]>>, properties?: Properties) => Feature<Polygon>
  };
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */

// Filename aliases
declare module '@turf/helpers/index' {
  declare module.exports: $Exports<'@turf/helpers'>;
}
declare module '@turf/helpers/index.js' {
  declare module.exports: $Exports<'@turf/helpers'>;
}
